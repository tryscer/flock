/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/

var Ee=Object.defineProperty;var ut=Object.getOwnPropertyDescriptor;var dt=Object.getOwnPropertyNames;var ht=Object.prototype.hasOwnProperty;var gt=(l,e)=>{for(var t in e)Ee(l,t,{get:e[t],enumerable:!0})},ft=(l,e,t,r)=>{if(e&&typeof e=="object"||typeof e=="function")for(let i of dt(e))!ht.call(l,i)&&i!==t&&Ee(l,i,{get:()=>e[i],enumerable:!(r=ut(e,i))||r.enumerable});return l};var St=l=>ft(Ee({},"__esModule",{value:!0}),l);var yt={};gt(yt,{default:()=>ye});module.exports=St(yt);var mt=require("obsidian");var Te=require("obsidian");var X=require("obsidian"),re=class extends X.Modal{constructor(e,t,r){super(e),this.folderName=t,this.folderPath=r,this.result=!1,this.modalPromise=new Promise(i=>{this.resolveModalPromise=i})}onOpen(){let{contentEl:e}=this;e.createEl("h2",{text:`[ChatGPT MD] No ${this.folderName} folder found.`}),e.createEl("p",{text:`If you choose "Yes, Create", the plugin will automatically create a folder at: ${this.folderPath}. You can change this path in the plugin settings.`}),new X.Setting(e).addButton(t=>t.setButtonText("Yes, Create Folder").setTooltip("Create folder").setCta().onClick(()=>{this.result=!0,this.resolveModalPromise(this.result),this.close()})),new X.Setting(e).addButton(t=>t.setButtonText("No, I'll create it myself").setTooltip("Cancel").setCta().onClick(()=>{this.result=!1,this.resolveModalPromise(this.result),this.close()}))}waitForModalValue(){return this.modalPromise}onClose(){let{contentEl:e}=this;e.empty()}};var Oe=async(l,e,t)=>{let r=new re(l,e,t);r.open();let i=await r.waitForModalValue();return i&&await l.vault.createFolder(t),i};var B=class{constructor(e){this.app=e}async writeInferredTitle(e,t){var s,a;let r=e.file;if(!r)throw new Error("No file is currently open");let i=this.sanitizeFileName(t),n=(a=(s=r.parent)==null?void 0:s.path)!=null?a:"/",o=`${n}/${i}.md`;for(let c=1;await this.app.vault.adapter.exists(o);c++)o=`${n}/${i} (${c}).md`;try{await this.app.fileManager.renameFile(r,o)}catch(c){throw new Te.Notice("[ChatGPT MD] Error writing inferred title to editor"),c}}sanitizeFileName(e){return e.replace(/[\\/:*?"<>|]/g,"-")}async ensureFolderExists(e,t){return!await this.app.vault.adapter.exists(e)&&!await Oe(this.app,t,e)?(new Te.Notice(`[ChatGPT MD] No ${t} found. One must be created to use the plugin. Set one in settings and make sure it exists.`),!1):!0}async createNewFile(e,t){return this.app.vault.create(e,t)}async readFile(e){return this.app.vault.read(e)}async getLinkedNoteContent(e){try{let t=this.app.metadataCache.getFirstLinkpathDest(e,"");return t?await this.app.vault.read(t):null}catch(t){return null}}formatDate(e,t){return e.toISOString().replace(/[-:]/g,"").replace(/\..+/,"")}};var et=require("obsidian");var g="ollama",d="openai",u="openrouter",f="lmstudio",S="anthropic",v="gemini",Ne={[d]:"/v1/chat/completions",[u]:"/api/v1/chat/completions",[g]:"/api/chat",[f]:"/v1/chat/completions",[S]:"/v1/messages",[v]:"/v1beta/models/{model}:generateContent"},Fe="add-comment-block",xe="add-hr",Le="call-chatgpt-api",ke="stop-streaming",Ge="move-to-chat",Ue="infer-title",$e="choose-chat-template",He="clear-chat";var Ce="chatFolder",Ke="chatTemplateFolder",M=`

`,Ve=/\[\[([^\][]+)\]\]/g,We=/\[([^\]]+)\]\(([^()]+)\)/g,Be=`=begin-chatgpt-md-comment${M}`,qe="=end-chatgpt-md-comment",je=3,Me=6,Ye="English",ze=4,ie="YYYYMMDDhhmmss",Je="Failed to fetch",_e="__chatgpt_plugin",q=`<hr class="${_e}">`,x="role::",N="assistant",Pe="developer",L="system",D="user",W=6e3,Xe=`You are an AI assistant integrated into Obsidian through the ChatGPT MD plugin. You are helping a user who is working within their Obsidian vault - a personal knowledge management system where they store notes, thoughts, and information in Markdown format.

Key context:
- The user is writing in Markdown format within Obsidian
- They may reference other notes in their vault using [[wiki links]] or standard [markdown links](url)
- Your responses will be inserted directly into their Markdown document
- Be concise but helpful, and format your responses appropriately for Markdown
- If you provide code examples, use proper markdown code blocks with language specification
- When suggesting organizational strategies, consider that this is within a personal knowledge management context
- The user may be taking notes, brainstorming, writing, researching, or organizing information

Code block formatting requirements:
- Code blocks must start and end with exactly 3 backticks (\`\`\`) on a new line
- There should be no whitespace before the opening or closing backticks
- The language name should be specified immediately after the opening backticks
- The actual code should start on a new line after the language specification
- Example format:
\`\`\`javascript
console.log("Hello World");
\`\`\`

Inline code formatting requirements:
- Use single backticks (\`) for inline code references like filenames (e.g., \`example.md\`), variable names (e.g., \`myVariable\`), or short code snippets referenced within a paragraph.
- Always ensure that single backticks are properly closed to avoid breaking Markdown rendering. For example, use \`code\` not \`code.

Table formatting requirements:
- Use standard Markdown table syntax.
- Tables should NOT be wrapped in code blocks.

Respond naturally and helpfully while being mindful of this Obsidian/note-taking context.`,Re="\u26A0\uFE0F **Response was truncated due to token limit.** Please increase the `max_tokens` setting in ChatGPT MD plugin settings to get the complete response.",Ie="\u26A0\uFE0F *Note: Some alternative responses were truncated due to token limit. Consider increasing `max_tokens` in settings for fuller responses.*",ne="Response was truncated due to token limit",Ze="\u26A0\uFE0F Title Inference Error";var oe=l=>{let t=(l.match(/```/g)||[]).length%2!==0;return t};var vt=l=>{let e=l.replace(/[-/\\^$*+?.()|[\]{}]/g,"\\$&").replace("YYYY","\\d{4}").replace("MM","\\d{2}").replace("DD","\\d{2}").replace("hh","\\d{2}").replace("mm","\\d{2}").replace("ss","\\d{2}");return new RegExp(`^${e}$`)},Qe=(l="",e)=>(l==null?void 0:l.length)==e.length&&vt(e).test(l),k=l=>l===0?"":l>Me?"#".repeat(Me)+" ":"#".repeat(l)+" ",Z=(l,e,t)=>`${M}${q}${M}${l}${x}${e}${t?`<span style="font-size: small;"> (${t})</span>`:""}${M}`,we=l=>{let t=l.replace(/^---\n/,"").replace(/\n---$/,"").split(`
`),r={},i=null,n=[];for(let o=0;o<t.length;o++){let s=t[o].trim();if(!s)continue;if(i!==null)if(s.startsWith("-")){let m=s.substring(1).trim();(m.startsWith("'")&&m.endsWith("'")||m.startsWith('"')&&m.endsWith('"'))&&(m=m.substring(1,m.length-1)),n.push(m);continue}else r[i]=n,i=null,n=[];let a=s.indexOf(":");if(a===-1)continue;let c=s.substring(0,a).trim(),p=s.substring(a+1).trim();if(p===""&&o+1<t.length&&t[o+1].trim().startsWith("-")){i=c,n=[];continue}p.startsWith("[")&&p.endsWith("]")?r[c]=p.slice(1,-1).split(",").map(m=>{let y=m.trim();return y.startsWith("'")&&y.endsWith("'")||y.startsWith('"')&&y.endsWith('"')?y.slice(1,-1):y}):p==="true"?r[c]=!0:p==="false"?r[c]=!1:p==="null"?r[c]=null:isNaN(Number(p))?r[c]=p:r[c]=Number(p)}return i!==null&&(r[i]=n),r};var j=class{constructor(e){this.app=e}async readFrontmatter(e){try{let t=this.app.metadataCache.getFileCache(e);return t!=null&&t.frontmatter?{...t.frontmatter}:null}catch(t){return null}}async writeFrontmatter(e,t){try{await this.app.fileManager.processFrontMatter(e,r=>{Object.keys(r).forEach(i=>{delete r[i]}),Object.assign(r,t)})}catch(r){throw new Error(`Failed to write frontmatter: ${r.message}`)}}async updateFrontmatterField(e,t,r){try{await this.app.fileManager.processFrontMatter(e,i=>{i[t]=r})}catch(i){throw new Error(`Failed to update frontmatter field '${t}': ${i.message}`)}}async mergeFrontmatter(e,t){try{await this.app.fileManager.processFrontMatter(e,r=>{Object.assign(r,t)})}catch(r){throw new Error(`Failed to merge frontmatter: ${r.message}`)}}hasFrontmatter(e){try{let t=this.app.metadataCache.getFileCache(e);return!!(t!=null&&t.frontmatter&&Object.keys(t.frontmatter).length>0)}catch(t){return!1}}async removeFrontmatterField(e,t){try{await this.app.fileManager.processFrontMatter(e,r=>{delete r[t]})}catch(r){throw new Error(`Failed to remove frontmatter field '${t}': ${r.message}`)}}async removeFrontmatterFields(e,t){try{await this.app.fileManager.processFrontMatter(e,r=>{t.forEach(i=>{delete r[i]})})}catch(r){throw new Error(`Failed to remove frontmatter fields: ${r.message}`)}}async clearFrontmatter(e){try{await this.app.fileManager.processFrontMatter(e,t=>{Object.keys(t).forEach(r=>{delete t[r]})})}catch(t){throw new Error(`Failed to clear frontmatter: ${t.message}`)}}async getFrontmatterField(e,t,r){try{let i=await this.readFrontmatter(e);return!i||!(t in i)?r:i[t]}catch(i){return r}}async hasFrontmatterField(e,t){try{let r=await this.readFrontmatter(e);return!!(r&&t in r)}catch(r){return!1}}};var Y=class{constructor(e){this.app=e;e&&(this.frontmatterManager=new j(e))}addHorizontalRule(e,t,r){let i=`${M}<hr class="${_e}">${M}${k(r)}${x}${t}${M}`,n=e.getCursor();e.replaceRange(i,n),e.setCursor(n.line+i.split(`
`).length-1,0)}appendMessage(e,t,r){let i=k(r),n=Z(i,N),o=Z(i,D);e.replaceRange(`${n}${t}${o}`,e.getCursor())}async clearChat(e){let t="";if(this.app&&this.frontmatterManager){let r=this.app.workspace.getActiveViewOfType(et.MarkdownView);if(r!=null&&r.file)try{let i=await this.frontmatterManager.readFrontmatter(r.file);if(i&&Object.keys(i).length>0){let n=Object.entries(i).filter(([o])=>o!=="position").map(([o,s])=>typeof s=="string"?`${o}: "${s}"`:`${o}: ${s}`);n.length>0&&(t=`---
${n.join(`
`)}
---

`)}}catch(i){}}e.setValue(t),t?e.setCursor({line:e.lastLine()+1,ch:0}):e.setCursor({line:0,ch:0})}moveCursorToEnd(e){try{let r={line:e.lastLine()+1,ch:0};e.setCursor(r)}catch(t){throw new Error("Error moving cursor to end of file"+t)}}addCommentBlock(e,t,r){let i=e.getCursor(),n=`${t}${M}${r}`;e.replaceRange(n,i),e.setCursor({line:i.line+1,ch:i.ch})}};var z=class{constructor(e,t){this.fileService=e;this.notificationService=t}findLinksInMessage(e){let t=[{regex:Ve,fullMatchIndex:0,titleIndex:1},{regex:We,fullMatchIndex:0,titleIndex:2}],r=[],i=new Set;for(let{regex:n,fullMatchIndex:o,titleIndex:s}of t)for(let a of e.matchAll(n)){let c=a[o],p=a[s];p&&!i.has(p)&&!p.startsWith("http://")&&!p.startsWith("https://")&&(r.push({link:c,title:p}),i.add(p))}return r}splitMessages(e){return e?e.split(q):[]}removeYAMLFrontMatter(e){if(!e||!e.trim().startsWith("---"))return e;let t=e.split(`
`),r=-1;for(let i=1;i<t.length;i++)if(t[i].trim()==="---"){r=i;break}return r===-1?e:t.slice(r+1).join(`
`).trim()}removeCommentsFromMessages(e){try{let t=/=begin-chatgpt-md-comment[\s\S]*?=end-chatgpt-md-comment/g;return e.replace(t,"")}catch(t){return this.notificationService.showError("Error removing comments from messages: "+t),e}}extractRoleAndMessage(e){try{if(!e.includes(x))return{role:D,content:e};let[t,...r]=e.split(x)[1].split(`
`);return{role:this.cleanupRole(t),content:r.join(`
`).trim()}}catch(t){return this.notificationService.showError("Failed to extract role and message: "+t),{role:D,content:e}}}cleanupRole(e){let t=e.trim().toLowerCase(),i=[D,N].find(n=>t.includes(n));return i||(this.notificationService.showWarning(`Unknown role: "${e}", defaulting to user`),D)}cleanMessagesFromNote(e){return this.splitMessages(this.removeYAMLFrontMatter(e.getValue())).map(r=>this.removeCommentsFromMessages(r))}async getMessagesFromEditor(e,t){let r=this.cleanMessagesFromNote(e);r=await Promise.all(r.map(async n=>{let o=this.findLinksInMessage(n);for(let s of o)try{let a=await this.fileService.getLinkedNoteContent(s.title);if(a){let c=new RegExp(`${M}${q}${M}#+ ${x}(?:${D}|${N}).*$`,"gm");a=a==null?void 0:a.replace(c,""),a=this.removeYAMLFrontMatter(a)||null,n=n.replace(new RegExp(this.escapeRegExp(s.link),"g"),`${M}${s.title}${M}${a}${M}`)}}catch(a){}return n}));let i=r.map(n=>this.extractRoleAndMessage(n));return{messages:r,messagesWithRole:i}}addSystemCommandsToMessages(e,t){return!t||t.length===0?e:[...t.map(i=>({role:"system",content:i})),...e]}getHeaderRole(e,t,r){return`${M}${q}${M}${e}${x}${t}${r?`<span style="font-size: small;"> (${r})</span>`:""}${M}`}formatMessage(e,t,r){let i=k(t);return`${this.getHeaderRole(i,e.role,r)}${e.content}`}appendMessage(e,t,r){let i=k(r),n=this.getHeaderRole(i,N),o=this.getHeaderRole(i,D);e.replaceRange(`${n}${t}${o}`,e.getCursor())}processResponse(e,t,r){t.mode==="streaming"?t.wasAborted||this.processStreamingResponse(e,r):this.processStandardResponse(e,t,r)}processStreamingResponse(e,t){let r=k(t.headingLevel),i=this.getHeaderRole(r,D);e.replaceRange(i,e.getCursor());let n=e.getCursor(),o={line:n.line,ch:n.ch+i.length};e.setCursor(o)}processStandardResponse(e,t,r){let i=typeof t=="object"&&t.fullString||t,n=typeof t=="object"?t.model:void 0,s=typeof i=="string"&&i.includes(ne)?i:oe(i)?i+"\n```":i,a=k(r.headingLevel),c=this.getHeaderRole(a,N,n),p=this.getHeaderRole(a,D);e.replaceRange(`${c}${s}${p}`,e.getCursor())}escapeRegExp(e){return e.replace(/[.*+?^${}()|[\]\\]/g,"\\$&")}};var U=require("obsidian");var K=require("obsidian"),se=class extends K.SuggestModal{constructor(e,t,r){super(e),this.settings=t,this.titleDate=r}getFilesInChatFolder(){let e=this.app.vault.getAbstractFileByPath(this.settings.chatTemplateFolder);if(e!=null)return e.children;throw new K.Notice(`Error getting folder: ${this.settings.chatTemplateFolder}`),new Error(`Error getting folder: ${this.settings.chatTemplateFolder}`)}getSuggestions(e){let t=this.getFilesInChatFolder();return e==""?t.map(r=>({title:r.basename,file:r})).sort((r,i)=>r.title.localeCompare(i.title)):t.filter(r=>r.basename.toLowerCase().includes(e.toLowerCase())).map(r=>({title:r.basename,file:r})).sort((r,i)=>r.title.localeCompare(i.title))}renderSuggestion(e,t){t.createEl("div",{text:e.title})}async onChooseSuggestion(e,t){new K.Notice(`Selected ${e.title}`);let r=await this.app.vault.read(e.file),i=r;!/^---\n[\s\S]*?\n---/.test(r)&&this.settings.defaultChatFrontmatter&&(i=this.settings.defaultChatFrontmatter+`

`+r);let o=`${this.titleDate} ${e.title}`,s=(0,K.normalizePath)(`${this.settings.chatFolder}/${o}.md`),a=1;for(;await this.app.vault.adapter.exists(s);)s=(0,K.normalizePath)(`${this.settings.chatFolder}/${o} (${a}).md`),a++;try{let c=await this.app.vault.create(s,i);await this.app.workspace.openLinkText(c.basename,"",!0)}catch(c){}}};var J=class{constructor(e,t,r){this.app=e;this.fileService=t;this.editorContentService=r}async createNewChatFromTemplate(e,t){try{if(!e.chatFolder||e.chatFolder.trim()===""){new U.Notice("[ChatGPT MD] No chat folder value found. Please set one in settings.");return}if(!e.chatTemplateFolder||e.chatTemplateFolder.trim()===""){new U.Notice("[ChatGPT MD] No chat template folder value found. Please set one in settings.");return}if(!await this.fileService.ensureFolderExists(e.chatFolder,Ce)||!await this.fileService.ensureFolderExists(e.chatTemplateFolder,Ke))return;new se(this.app,e,t).open()}catch(r){new U.Notice("[ChatGPT MD] Error in Create new chat from template, check console")}}async createNewChatWithHighlightedText(e,t){try{let r=e.getSelection();if(!t.chatFolder||t.chatFolder.trim()===""){new U.Notice("[ChatGPT MD] No chat folder value found. Please set one in settings.");return}if(!await this.fileService.ensureFolderExists(t.chatFolder,Ce))return;let n=`${this.fileService.formatDate(new Date,t.dateFormat)}.md`,o=`${t.chatFolder}/${n}`,s="";t.defaultChatFrontmatter&&(s=t.defaultChatFrontmatter+`

`),r&&(s+=r);let a=await this.fileService.createNewFile(o,s);await this.app.workspace.openLinkText(a.basename,"",!0,{state:{mode:"source"}});let c=this.app.workspace.getActiveViewOfType(U.MarkdownView);if(!c){new U.Notice("No active markdown editor found.");return}c.editor.focus(),this.editorContentService.moveCursorToEnd(c.editor)}catch(r){new U.Notice("[ChatGPT MD] Error in Create new chat with highlighted text, check console")}}};var pt=require("obsidian");var De=require("obsidian");var tt=require("obsidian"),b=class{showNotification(e,t=5e3){new tt.Notice(e,t)}formatChatMessage(e,t=!1){return t?`I am sorry. ${e}`:e}showSuccess(e){this.showNotification(`\u2705 ${e}`,3e3)}showWarning(e){this.showNotification(`\u26A0\uFE0F ${e}`,5e3)}showError(e){this.showNotification(`\u274C ${e}`,7e3)}};function I(l){return!!l&&l.trim()!==""}var E=class{constructor(e){this.notificationService=e||new b}getApiKey(e,t){switch(t){case d:return e.apiKey;case u:return e.openrouterApiKey;case S:return e.anthropicApiKey;case v:return e.geminiApiKey;case g:return"";case f:return"";default:return""}}validateApiKey(e,t){if(!(t===g||t===f)&&!I(e)){let r=`${t} API key is missing or invalid. Please add your ${t} API key in the settings or set your default model in the settings if you use Ollama or LM Studio.`;throw this.notificationService.showError(r),new Error(r)}}createAuthHeaders(e,t){let r={"Content-Type":"application/json"};switch(t){case d:r.Authorization=`Bearer ${e}`;break;case u:r.Authorization=`Bearer ${e}`,r["HTTP-Referer"]="https://github.com/bramses/chatgpt-md",r["X-Title"]="Obsidian ChatGPT MD Plugin";break;case S:r["x-api-key"]=e,r["anthropic-version"]="2023-06-01";break;case v:r["x-goog-api-key"]=e;break;case g:break;case f:break}return r}};var w=class{constructor(e){this.collectedCitations=new Set;this.tableBuffer="";this.isInTable=!1;this.tableStartPosition=null;this.notificationService=e||new b}handleChoicesWithFinishReason(e){var i,n;if(!e||e.length===0)return null;let t=e.filter(o=>o.finish_reason==="stop"),r=e.filter(o=>o.finish_reason==="length");if(t.length>0){let o=((i=t[0].message)==null?void 0:i.content)||"";return r.length>0?o+`

`+Ie:o}return r.length>0?Re:((n=e[0].message)==null?void 0:n.content)||""}handleStreamingTruncation(e,t,r,i,n){if(t.length===0)return r;let o;if(e.length>0?o=`

`+Ie:o=`

`+Re,n)i.replaceSelection(o);else{let s=i.getCursor();i.replaceRange(o,s),i.setCursor({line:s.line,ch:s.ch+o.length})}return r+o}insertAssistantHeader(e,t,r){let i=Z(t,N,r),n={line:e.getCursor().line,ch:e.getCursor().ch};e.replaceRange(i,n);let o={line:n.line,ch:n.ch+i.length};return e.setCursor(o),{initialCursor:n,newCursor:o}}parseNonStreamingResponse(e,t){switch(t){case d:case u:case f:let r=this.handleChoicesWithFinishReason(e.choices);return r!==null?r:"";case S:return e.content&&Array.isArray(e.content)?e.content.filter(n=>n.type==="text").map(n=>n.text).join(""):e.content||JSON.stringify(e);case v:if(e.candidates&&e.candidates.length>0){let n=e.candidates[0];if(n.content&&n.content.parts&&n.content.parts.length>0)return n.content.parts.filter(o=>o.text).map(o=>o.text).join("")}return e.text||JSON.stringify(e);case g:return e.message&&e.message.content?e.message.content:e.response?e.response:JSON.stringify(e);default:let i=this.handleChoicesWithFinishReason(e==null?void 0:e.choices);return i!==null?i:(e==null?void 0:e.response)||JSON.stringify(e)}}processStreamLine(e,t,r,i,n,o){switch(n){case d:case u:case f:return this.processOpenAIFormat(e,t,r,i,o);case S:return this.processAnthropicFormat(e,t,r,i,o);case v:return this.processGeminiFormat(e,t,r,i,o);case g:return this.processOllamaFormat(e,t,r,i,o);default:return t}}processAnthropicFormat(e,t,r,i,n){if(e.trim()==="")return t;try{if(e.startsWith("event: "))return t;if(e.startsWith("data: ")){let o=e.substring(6).trimStart();if(o==="[DONE]")return t;try{let s=JSON.parse(o);if(s.type==="content_block_delta"){if(s.delta&&s.delta.text)return this.processContentWithTableBuffering(s.delta.text,t,r,n)}else if(s.type==="content_block_start"&&s.content_block&&s.content_block.type==="text"&&s.content_block.text)return this.processContentWithTableBuffering(s.content_block.text,t,r,n)}catch(s){}}return t}catch(o){return t}}processOpenAIFormat(e,t,r,i,n){if(e.trim()==="")return t;try{let o=e.substring(5).trimStart(),s=JSON.parse(o);if(s.citations&&s.citations.length>0)for(let a of s.citations)this.collectedCitations.add(a);if(s.choices&&s.choices.length>0){let a=s.choices.filter(c=>c.finish_reason);if(a.length>0){let c=a.filter(m=>m.finish_reason==="stop"),p=a.filter(m=>m.finish_reason==="length");return this.handleStreamingTruncation(c,p,t,r,n)}if(s.choices[0]){let{delta:c}=s.choices[0];if(c&&c.content)return this.processContentWithTableBuffering(c.content,t,r,n)}}return t}catch(o){return t}}processOllamaFormat(e,t,r,i,n){if(e.trim()==="")return t;try{let o=JSON.parse(e);if(o.message&&o.message.content){let s=o.message.content;return this.processContentWithTableBuffering(s,t,r,n)}return o.response?this.processContentWithTableBuffering(o.response,t,r,n):t}catch(o){return t}}processGeminiFormat(e,t,r,i,n){if(e.trim()==="")return t;try{let o=e.substring(5).trimStart();if(o==="[DONE]")return t;let s=JSON.parse(o);if(s.candidates&&s.candidates.length>0){let a=s.candidates[0];if(a.content&&a.content.parts&&a.content.parts.length>0){let c=a.content.parts.filter(p=>p.text).map(p=>p.text).join("");if(c)return this.processContentWithTableBuffering(c,t,r,n)}}return t}catch(o){return t}}async processStreamResponse(e,t,r,i,n,o){let s=e.body.getReader(),a=new TextDecoder,c=!1,p="",m=!1;try{for(;!c;){let{value:y,done:$}=await s.read();if(c=$,c)break;let te=a.decode(y).split(`
`);for(let V of te)V.startsWith("data: [DONE]")||(V.startsWith("data:")?p=this.processStreamLine(V,p,r,i.newCursor,t,n):V.trim()!==""&&(p=this.processStreamLine(V,p,r,i.newCursor,t,n)))}}catch(y){}if(o&&o.wasAborted())return m=!0,o.resetAbortedFlag(),this.resetTableState(),n||r.replaceRange("",i.initialCursor,r.getCursor()),{text:"",wasAborted:m};if(this.isInTable&&this.tableBuffer){if(this.tableStartPosition&&!n){let y=r.getCursor();r.replaceRange(this.tableBuffer,this.tableStartPosition,y),r.setCursor({line:this.tableStartPosition.line,ch:this.tableStartPosition.ch+this.tableBuffer.length})}else n&&r.replaceSelection(this.tableBuffer);p+=this.tableBuffer,this.resetTableState()}if(oe(p)){let y=r.getCursor();r.replaceRange("\n```",y),p+="\n```"}if(this.collectedCitations.size>0){let $=`

**Sources:**
`+Array.from(this.collectedCitations).map((te,V)=>`${V+1}. [${te}](${te})`).join(`
`),H=r.getCursor();r.replaceRange($,H),r.setCursor({line:H.line,ch:H.ch+$.length}),p+=$,this.collectedCitations.clear()}if(!n){let y=r.getCursor();r.replaceRange("",y,{line:1/0,ch:1/0})}return{text:p,wasAborted:m}}isTableRow(e){let t=e.trim();if(!t.includes("|")||t.length<3||this.isTableSeparator(t))return!1;let r=t.split("|");return r.length>=2&&r.some(i=>i.trim().length>0)}isTableSeparator(e){let t=e.trim();return!t.includes("|")||!t.includes("-")?!1:/^[\|\-\:\s]+$/.test(t)}isTableEnd(e,t){let i=(e+t).split(`
`).filter(n=>n.trim()!=="").pop()||"";return this.isInTable&&!this.isTableRow(i)&&!this.isTableSeparator(i)}isCompleteTable(e){let t=e.split(`
`).filter(o=>o.trim()!=="");if(t.length<2)return!1;let r=!1,i=!1,n=!1;for(let o of t)this.isTableRow(o)?i?n=!0:r=!0:this.isTableSeparator(o)&&(i=!0);return r&&i&&n}resetTableState(){this.isInTable=!1,this.tableBuffer="",this.tableStartPosition=null}processContentWithTableBuffering(e,t,r,i){if(!this.isInTable&&e.includes("|")&&(t.slice(-200)+e).split(`
`).some(c=>{let p=c.trim();return p.includes("|")&&(this.isTableRow(p)||this.isTableSeparator(p))}))return this.isInTable=!0,this.tableBuffer=e,this.tableStartPosition=r.getCursor(),t+e;if(this.isInTable){if(this.tableBuffer+=e,this.shouldFlushTable(this.tableBuffer,e)){let{tableContent:o,remainingContent:s}=this.extractTableFromBuffer(this.tableBuffer);if(this.tableStartPosition&&!i){let a=r.getCursor();r.replaceRange(o,this.tableStartPosition,a),r.setCursor({line:this.tableStartPosition.line,ch:this.tableStartPosition.ch+o.length})}else i&&r.replaceSelection(o);if(this.resetTableState(),s){if(i)r.replaceSelection(s);else{let a=r.getCursor();r.replaceRange(s,a),r.setCursor({line:a.line,ch:a.ch+s.length})}return t+o+s}return t+o}return t+e}if(i)r.replaceSelection(e);else{let n=r.getCursor();r.replaceRange(e,n),r.setCursor({line:n.line,ch:n.ch+e.length})}return t+e}shouldFlushTable(e,t){let r=e.split(`
`);return!!(e.includes(`

`)||this.isCompleteTable(e)&&t.includes(`
`)&&r.slice(-3).filter(a=>a.trim()!=="").some(a=>{let c=a.trim();return c!==""&&!this.isTableRow(c)&&!this.isTableSeparator(c)})||e.length>2e3)}extractTableFromBuffer(e){let r=this.reconstructTableLines(e).split(`
`),i=[],n=[],o=!1;for(let c=0;c<r.length;c++){let p=r[c],m=p.trim();if(!o)if(m===""||this.isTableRow(m)||this.isTableSeparator(m))i.push(p);else{o=!0,n=r.slice(c);break}}let s=i.join(`
`);s&&!s.endsWith(`
`)&&(s+=`
`);let a=n.join(`
`);return{tableContent:s,remainingContent:a}}reconstructTableLines(e){let t=e;return t=t.replace(/\|\|/g,`|
|`),t=t.replace(/\n\n+/g,`
`),t}};var P=class{constructor(e){this.notificationService=e}handleApiError(e,t,r={showNotification:!0,logToConsole:!0,returnForChat:!1}){var c,p,m,y;let i=`[ChatGPT MD] ${t}`,n="",o=((c=r.context)==null?void 0:c.model)||"",s=((p=r.context)==null?void 0:p.url)||"",a=this.formatContextInfo(o,s);if(e instanceof Object?e.name==="AbortError"?n=`${i}: Stream aborted`:e.message===Je?n=`${i}: Network connection error`:e.status===401||((m=e.error)==null?void 0:m.status)===401?n=`${i}: Authentication failed (401)`:e.status===404||((y=e.error)==null?void 0:y.status)===404?n=`${i}: Resource not found (404)${a?` - ${a}`:""}`:e.error?n=`${i}: ${e.error.message}${a?` - ${a}`:""}`:n=`${i}: ${JSON.stringify(e)}${a?` - ${a}`:""}`:n=`${i}: ${e}${a?` - ${a}`:""}`,r.logToConsole,r.showNotification&&this.notificationService.showNotification(n,5e3),r.returnForChat)return`I am sorry, I could not answer your request because of an error, here is what went wrong-

${e instanceof Object&&e.error?e.error.message:(e==null?void 0:e.message)||e||"undefined"}

Model- ${o}, URL- ${s}`;throw new Error(n)}formatContextInfo(e,t){let r=[];return e&&r.push(`Model: ${e}`),t&&r.push(`URL: ${t}`),r.length>0?r.join(", "):""}handleUrlError(e,t,r){let i=`[ChatGPT MD] Error calling specified URL: ${e}`;return this.notificationService.showNotification(i),`I am sorry, I could not answer your request because of an error, here is what went wrong-

Error connecting to the custom URL.

Model- ${r===g?"llama2":"unknown"}, URL- ${e}`}handleModelError(e,t){let r=`[ChatGPT MD] Error calling model: ${e}`;return this.notificationService.showNotification(r),`I am sorry, there was an error with the model: ${e}. Please check your settings or try a different model.`}handleValidationError(e,t){let r=`[ChatGPT MD] Validation Error: ${e}`;throw this.notificationService.showNotification(r),new Error(r)}};var R=class{constructor(e,t,r,i){this.abortController=null;this.wasStreamingAborted=!1;this.notificationService=t||new b,this.errorService=e||new P(this.notificationService),this.apiAuthService=r||new E,this.apiResponseParser=i||new w}async makeStreamingRequest(e,t,r,i){try{this.abortController=new AbortController;let n=await fetch(e,{method:"POST",headers:r,body:JSON.stringify(t),signal:this.abortController.signal});if(!n.ok)throw await this.handleHttpError(n,i,t,e);if(!n.body)throw new Error("The response body was empty");return n}catch(n){return this.handleRequestError(n,i,t,e)}}async makeNonStreamingRequest(e,t,r,i){try{let o=(await(0,De.requestUrl)({url:e,method:"POST",headers:r,contentType:"application/json",body:JSON.stringify(t),throw:!1})).json;return o!=null&&o.error?this.errorService.handleApiError({error:o.error},i,{returnForChat:!0,showNotification:!0,context:{model:t.model,url:e}}):this.apiResponseParser.parseNonStreamingResponse(o,i)}catch(n){return this.errorService.handleApiError(n,i,{returnForChat:!0,showNotification:!0,context:{model:t.model,url:e}})}}async makeGetRequest(e,t,r){try{let i=await(0,De.requestUrl)({url:e,method:"GET",headers:t,throw:!1});if(i.status!==200)throw new Error(`Failed to fetch data from ${e}: ${i.status}`);return i.json}catch(i){throw i}}async handleHttpError(e,t,r,i){let n;try{n=await e.json()}catch(s){n={status:e.status,statusText:e.statusText}}let o=this.errorService.handleApiError(n,t,{returnForChat:!1,showNotification:!0,context:{model:r.model,url:i,status:e.status}});return new Error(o)}handleRequestError(e,t,r,i){return this.errorService.handleApiError(e,t,{returnForChat:!1,showNotification:!0,context:{model:r.model,url:i}})}stopStreaming(){this.abortController&&(this.wasStreamingAborted=!0,this.abortController.abort(),this.abortController=null)}wasAborted(){return this.wasStreamingAborted}resetAbortedFlag(){this.wasStreamingAborted=!1}};var F=class{constructor(e,t){this.inferTitleFromMessages=async(e,t,r)=>{try{if(t.length<2)return this.notificationService.showWarning("Not enough messages to infer title. Minimum 2 messages."),"";let i=`Infer title from the summary of the content of these messages. The title **cannot** contain any of the following characters: colon (:), back slash (\\), forward slash (/), asterisk (*), question mark (?), double quote ("), less than (<), greater than (>), or pipe (|) as these are invalid in file names. Just return the title. Write the title in ${r.inferTitleLanguage}. 
Messages:${M}${JSON.stringify(t)}`,n=this.getDefaultConfig(),o={...n,...r};o.model||(o.model=n.model),o.url||(o.url=n.url);try{return await this.callNonStreamingAPIForTitleInference(e,[{role:D,content:i}],o,r)}catch(s){return""}}catch(i){return this.showNoTitleInferredNotification(),""}};this.notificationService=t!=null?t:new b,this.errorService=e!=null?e:new P(this.notificationService),this.apiService=new R(this.errorService,this.notificationService),this.apiAuthService=new E(this.notificationService),this.apiResponseParser=new w(this.notificationService)}handleTitleTruncationError(e,t){let r=e.editor,i=r.lastLine(),n=r.getLine(i).length,o={line:i,ch:n};r.setCursor(o);let a=`
---
${"#".repeat(2)+" "}${Ze}
`;r.replaceRange(a+t+`
`,o)}isTruncationError(e){return e.includes(ne)}async callAIAPI(e,t={},r,i,n,o,s,a){let c={...this.getDefaultConfig(),...t};return a&&(c.url=i),t.stream&&n?this.callStreamingAPI(s,e,c,n,r,o,a):this.callNonStreamingAPI(s,e,c,a)}async inferTitle(e,t,r,i){try{if(!e.file)throw new Error("No active file found");let n=this.getApiKeyFromSettings(t),o=await this.inferTitleFromMessages(n,r,t),s="";if(typeof o=="string"){if(this.isTruncationError(o))return this.handleTitleTruncationError(e,o),this.showNoTitleInferredNotification(),"";s=o}else if(o&&typeof o=="object"){let c=o.fullString||"";if(this.isTruncationError(c))return this.handleTitleTruncationError(e,c),this.showNoTitleInferredNotification(),"";s=c}return s&&s.trim().length>0?(await i.writeInferredTitle(e,s.trim()),s.trim()):(this.showNoTitleInferredNotification(),"")}catch(n){return this.showNoTitleInferredNotification(),""}}showNoTitleInferredNotification(){var e;(e=this.notificationService)==null||e.showWarning("Could not infer title. The file name was not changed.")}async callNonStreamingAPIForTitleInference(e,t,r,i){try{r.stream=!1;let{payload:n,headers:o}=this.prepareApiCall(e,t,r,i,!0);return await this.apiService.makeNonStreamingRequest(this.getApiEndpoint(r),n,o,this.serviceType)}catch(n){throw n}}stopStreaming(){var e;(e=this.apiService)==null||e.stopStreaming()}processStreamingResult(e){return e.wasAborted&&e.text===""?{fullString:"",mode:"streaming",wasAborted:!0}:{fullString:e.text,mode:"streaming",wasAborted:e.wasAborted}}getApiEndpoint(e){return`${e.url}${Ne[this.serviceType]}`}addPluginSystemMessage(e,t){return this.supportsSystemField()?e:[{role:this.getSystemMessageRole(),content:t.pluginSystemMessage},...e]}processSystemCommands(e,t){return!t||t.length===0||this.supportsSystemField()?e:[...t.map(i=>({role:this.getSystemMessageRole(),content:i})),...e]}prepareApiCall(e,t,r,i,n=!1){this.apiAuthService.validateApiKey(e,this.serviceType);let o=n?t:this.addPluginSystemMessage(t,i),s=this.createPayload(r,o),a=this.apiAuthService.createAuthHeaders(e,this.serviceType);return this.supportsSystemField()&&!n&&!s.system&&(s.system=i.pluginSystemMessage),{payload:s,headers:a}}handleApiCallError(e,t,r=!1){if(!!r)throw e;return this.errorService.handleApiError(e,this.serviceType,{returnForChat:!0,showNotification:!0,context:{model:t.model,url:t.url}})}async defaultCallStreamingAPI(e,t,r,i,n,o,s){try{let{payload:a,headers:c}=this.prepareApiCall(e,t,r,s),p=this.apiResponseParser.insertAssistantHeader(i,n,a.model),m=await this.apiService.makeStreamingRequest(this.getApiEndpoint(r),a,c,this.serviceType),y=await this.apiResponseParser.processStreamResponse(m,this.serviceType,i,p,o,this.apiService);return this.processStreamingResult(y)}catch(a){return{fullString:`Error: ${a}`,mode:"streaming"}}}async defaultCallNonStreamingAPI(e,t,r,i){var n;try{r.stream=!1;let{payload:o,headers:s}=this.prepareApiCall(e,t,r,i);return{fullString:await this.apiService.makeNonStreamingRequest(this.getApiEndpoint(r),o,s,this.serviceType),model:o.model}}catch(o){let s=t.length===1&&((n=t[0].content)==null?void 0:n.toString().includes("Infer title from the summary"));return this.handleApiCallError(o,r,s)}}},rt=(l,e)=>{if(e!=null&&e.startsWith("openai@"))return d;if(e!=null&&e.includes(u))return u;if(e!=null&&e.startsWith("lmstudio@"))return f;if(e!=null&&e.startsWith("anthropic@"))return S;if(e!=null&&e.startsWith("gemini@"))return v;if(e!=null&&e.startsWith("ollama@"))return g;if(e!=null&&e.startsWith("local@"))return g;if(e!=null&&e.includes("claude"))return S;if(e!=null&&e.includes("gemini"))return v;if(e!=null&&e.includes("local"))return l!=null&&l.includes("1234")?f:g;if(e!=null&&e.includes("gpt")||e!=null&&e.includes("o1")||e!=null&&e.includes("o3")||e!=null&&e.includes("o4"))return d;let t="openrouter",r="anthropic",i="generativelanguage.googleapis.com",n=["localhost","127.0.0.1"],o="1234";if(l!=null&&l.includes(t))return u;if(l!=null&&l.includes(r))return S;if(l!=null&&l.includes(i))return v;if(l!=null&&l.includes(o))return f;if(n.some(s=>l==null?void 0:l.includes(s)))return g;if(e&&!l)return d},it=l=>{let e=I(l.openrouterApiKey),t=I(l.apiKey),r=I(l.anthropicApiKey),i=I(l.geminiApiKey);return t?d:r?S:i?v:e?u:null};var h={aiService:d,frequency_penalty:0,max_tokens:400,model:"openai@gpt-4.1-mini",presence_penalty:0,stream:!0,system_commands:null,tags:[],temperature:.7,title:"Untitled",top_p:1,url:"https://api.openai.com"},nt=async(l,e)=>{try{let t=new E;if(!I(e))return[];let r=new R,i=t.createAuthHeaders(e,d);return(await r.makeGetRequest(`${l}/v1/models`,i,d)).data.filter(o=>(o.id.includes("o3")||o.id.includes("o4")||o.id.includes("o1")||o.id.includes("gpt-4")||o.id.includes("gpt-5")||o.id.includes("gpt-3"))&&!o.id.includes("audio")&&!o.id.includes("transcribe")&&!o.id.includes("realtime")&&!o.id.includes("o1-pro")&&!o.id.includes("tts")).sort((o,s)=>o.id<s.id?1:o.id>s.id?-1:0).map(o=>`openai@${o.id}`)}catch(t){return[]}},ae=class extends F{constructor(t,r,i,n,o){super(t,r);this.serviceType=d;this.errorService=t||new P(this.notificationService),this.apiService=i||new R(this.errorService,this.notificationService),this.apiAuthService=n||new E(this.notificationService),this.apiResponseParser=o||new w(this.notificationService)}getDefaultConfig(){return h}getApiKeyFromSettings(t){return this.apiAuthService.getApiKey(t,d)}getSystemMessageRole(){return Pe}supportsSystemField(){return!1}createPayload(t,r){let i=t.model.includes("@")?t.model.split("@")[1]:t.model,n=this.processSystemCommands(r,t.system_commands),o={model:i,messages:n,max_completion_tokens:t.max_tokens,stream:t.stream};return i.includes("search")||i.includes("o1")||i.includes("o4")||i.includes("o3")||i.includes("gpt-5")||(o.temperature=t.temperature,o.top_p=t.top_p,o.presence_penalty=t.presence_penalty,o.frequency_penalty=t.frequency_penalty),o}handleAPIError(t,r,i){let n={model:r.model,url:r.url,defaultUrl:h.url,aiService:d};return t instanceof Object&&r.url!==h.url?this.errorService.handleUrlError(r.url,h.url,d):this.errorService.handleApiError(t,d,{context:n,showNotification:!0,logToConsole:!0})}async callStreamingAPI(t,r,i,n,o,s,a){return this.defaultCallStreamingAPI(t,r,i,n,o,s,a)}async callNonStreamingAPI(t,r,i,n){return this.defaultCallNonStreamingAPI(t,r,i,n)}showNoTitleInferredNotification(){this.notificationService.showWarning("Could not infer title. The file name was not changed.")}};var O={aiService:g,model:"",url:"http://localhost:11434",stream:!0,title:"Untitled",system_commands:null},ot=async l=>{try{let e=new R,t={"Content-Type":"application/json"};return(await e.makeGetRequest(`${l}/api/tags`,t,g)).models.sort((n,o)=>n.name<o.name?1:n.name>o.name?-1:0).map(n=>`ollama@${n.name}`)}catch(e){return[]}},le=class extends F{constructor(t,r,i,n,o){super(t,r);this.serviceType=g;this.errorService=t||new P(this.notificationService),this.apiService=i||new R(this.errorService,this.notificationService),this.apiAuthService=n||new E(this.notificationService),this.apiResponseParser=o||new w(this.notificationService)}getDefaultConfig(){return O}getApiKeyFromSettings(t){return this.apiAuthService.getApiKey(t,g)}getSystemMessageRole(){return L}supportsSystemField(){return!1}createPayload(t,r){let i=t.model.includes("@")?t.model.split("@")[1]:t.model,n=this.processSystemCommands(r,t.system_commands);return{model:i,messages:n,stream:t.stream}}handleAPIError(t,r,i){let n={model:r.model,url:r.url,defaultUrl:O.url,aiService:g};return t instanceof Object&&r.url!==O.url?this.errorService.handleUrlError(r.url,O.url,g):this.errorService.handleApiError(t,g,{context:n,showNotification:!0,logToConsole:!0})}async callStreamingAPI(t,r,i,n,o,s,a){return this.defaultCallStreamingAPI(t,r,i,n,o,s,a)}async callNonStreamingAPI(t,r,i,n){return this.defaultCallNonStreamingAPI(t,r,i,n)}showNoTitleInferredNotification(){this.notificationService.showWarning("Could not infer title. The file name was not changed.")}};var A={aiService:u,frequency_penalty:.5,max_tokens:400,model:"openrouter@openai/gpt-4.1-mini",openrouterApiKey:"",presence_penalty:.5,stream:!0,system_commands:null,tags:[],temperature:.7,title:"Untitled",top_p:1,url:"https://openrouter.ai"},st=async(l,e)=>{try{let t=new E;if(!I(e))return[];let r=new R,i=t.createAuthHeaders(e,u);return(await r.makeGetRequest(`${l}/api/v1/models`,i,u)).data.sort((o,s)=>o.id<s.id?1:o.id>s.id?-1:0).map(o=>`${u}@${o.id}`)}catch(t){return[]}},ce=class extends F{constructor(t,r,i,n,o){super(t,r);this.serviceType=u;this.errorService=t||new P(this.notificationService),this.apiService=i||new R(this.errorService,this.notificationService),this.apiAuthService=n||new E(this.notificationService),this.apiResponseParser=o||new w(this.notificationService)}getDefaultConfig(){return A}getApiKeyFromSettings(t){return this.apiAuthService.getApiKey(t,u)}getSystemMessageRole(){return L}supportsSystemField(){return!1}createPayload(t,r){let i=t.model.includes("@")?t.model.split("@")[1]:t.model,n=this.processSystemCommands(r,t.system_commands);return{model:i,messages:n,max_tokens:t.max_tokens,temperature:t.temperature,top_p:t.top_p,presence_penalty:t.presence_penalty,frequency_penalty:t.frequency_penalty,stream:t.stream}}handleAPIError(t,r,i){let n={model:r.model,url:r.url,defaultUrl:A.url,aiService:u};return t instanceof Object&&r.url!==A.url?this.errorService.handleUrlError(r.url,A.url,u):this.errorService.handleApiError(t,u,{context:n,showNotification:!0,logToConsole:!0})}async callStreamingAPI(t,r,i,n,o,s,a){return this.defaultCallStreamingAPI(t,r,i,n,o,s,a)}async callNonStreamingAPI(t,r,i,n){return this.defaultCallNonStreamingAPI(t,r,i,n)}showNoTitleInferredNotification(){this.notificationService.showWarning("Could not infer title. The file name was not changed.")}};var C={aiService:f,frequency_penalty:0,max_tokens:400,model:"",presence_penalty:0,stream:!0,system_commands:null,tags:[],temperature:.7,title:"Untitled",top_p:1,url:"http://localhost:1234"},at=async(l,e)=>{try{let t=new E,r=e&&I(e)?t.createAuthHeaders(e,f):{"Content-Type":"application/json"};return(await new R().makeGetRequest(`${l}/v1/models`,r,f)).data.filter(o=>!o.id.includes("embedding")&&!o.id.includes("audio")&&!o.id.includes("transcribe")&&!o.id.includes("tts")).sort((o,s)=>o.id<s.id?1:o.id>s.id?-1:0).map(o=>`lmstudio@${o.id}`)}catch(t){return[]}},pe=class extends F{constructor(t,r,i,n,o){super(t,r);this.serviceType=f;this.errorService=t||new P(this.notificationService),this.apiService=i||new R(this.errorService,this.notificationService),this.apiAuthService=n||new E(this.notificationService),this.apiResponseParser=o||new w(this.notificationService)}getDefaultConfig(){return C}getApiKeyFromSettings(t){return this.apiAuthService.getApiKey(t,f)}getSystemMessageRole(){return L}supportsSystemField(){return!1}createPayload(t,r){let i=t.model.includes("@")?t.model.split("@")[1]:t.model,n=this.processSystemCommands(r,t.system_commands);return{model:i,messages:n,max_completion_tokens:t.max_tokens,stream:t.stream,temperature:t.temperature,top_p:t.top_p,presence_penalty:t.presence_penalty,frequency_penalty:t.frequency_penalty}}handleAPIError(t,r,i){let n={model:r.model,url:r.url,defaultUrl:C.url,aiService:f};return t instanceof Object&&r.url!==C.url?this.errorService.handleUrlError(r.url,C.url,f):this.errorService.handleApiError(t,f,{context:n,showNotification:!0,logToConsole:!0})}async callStreamingAPI(t,r,i,n,o,s,a){return this.defaultCallStreamingAPI(t,r,i,n,o,s,a)}async callNonStreamingAPI(t,r,i,n){return this.defaultCallNonStreamingAPI(t,r,i,n)}showNoTitleInferredNotification(){this.notificationService.showWarning("Could not infer title. The file name was not changed.")}};var _={aiService:S,max_tokens:400,model:"anthropic@claude-sonnet-4-20250514",stream:!0,system_commands:null,tags:[],temperature:.7,title:"Untitled",url:"https://api.anthropic.com"},lt=async(l,e)=>{try{if(!I(e))return[];let t=`${l.replace(/\/$/,"")}/v1/models`,r=await fetch(t,{method:"GET",headers:{"x-api-key":e,"anthropic-version":"2023-06-01","anthropic-dangerous-direct-browser-access":"true","Content-Type":"application/json"}});if(!r.ok)throw new Error(`HTTP error! status: ${r.status}`);let i=await r.json();return i.data&&Array.isArray(i.data)?i.data.filter(n=>n.type==="model"&&n.id).map(n=>`anthropic@${n.id}`).sort():[]}catch(t){return[]}},me=class extends F{constructor(t,r,i,n,o){super(t,r);this.serviceType=S;this.errorService=t||new P(this.notificationService),this.apiService=i||new R(this.errorService,this.notificationService),this.apiAuthService=n||new E(this.notificationService),this.apiResponseParser=o||new w(this.notificationService)}getDefaultConfig(){return _}getApiKeyFromSettings(t){return this.apiAuthService.getApiKey(t,S)}getSystemMessageRole(){return L}supportsSystemField(){return!0}createPayload(t,r){let i=t.model.includes("@")?t.model.split("@")[1]:t.model,n=this.convertToAnthropicMessages(r),o={model:i,messages:n,max_tokens:t.max_tokens,stream:t.stream};return t.temperature!==void 0&&(o.temperature=t.temperature),o}convertToAnthropicMessages(t){let r=[];for(let i of t){if(i.role===L)continue;let n;i.role===N?n="assistant":n="user",r.push({role:n,content:i.content})}return r}handleAPIError(t,r,i){let n={model:r.model,url:r.url,defaultUrl:_.url,aiService:S};return t instanceof Object&&r.url!==_.url?this.errorService.handleUrlError(r.url,_.url,S):this.errorService.handleApiError(t,S,{context:n,showNotification:!0,logToConsole:!0})}async callStreamingAPI(t,r,i,n,o,s,a){return this.defaultCallStreamingAPI(t,r,i,n,o,s,a)}async callNonStreamingAPI(t,r,i,n){return this.defaultCallNonStreamingAPI(t,r,i,n)}showNoTitleInferredNotification(){this.notificationService.showWarning("Could not infer title. The file name was not changed.")}prepareApiCall(t,r,i,n,o=!1){this.apiAuthService.validateApiKey(t,this.serviceType);let s=o?r:this.addPluginSystemMessage(r,n),a=i,c=this.createPayload(a,s),p=this.apiAuthService.createAuthHeaders(t,this.serviceType);if(o)a.system_commands&&a.system_commands.length>0&&(c.system=a.system_commands.join(`

`));else{let m=[];m.push(n.pluginSystemMessage),a.system_commands&&a.system_commands.length>0&&m.push(a.system_commands.join(`

`)),c.system=m.join(`

`)}return p["anthropic-dangerous-direct-browser-access"]="true",{payload:c,headers:p}}};var T={aiService:v,max_tokens:400,model:"gemini@gemini-2.5-flash",stream:!0,system_commands:null,tags:[],temperature:.7,title:"Untitled",top_p:.95,url:"https://generativelanguage.googleapis.com"},ct=async(l,e)=>{try{if(!I(e))return[];let t=`${l.replace(/\/$/,"")}/v1beta/models`,r=await fetch(t,{method:"GET",headers:{"x-goog-api-key":e,"Content-Type":"application/json"}});if(!r.ok)throw new Error(`HTTP error! status: ${r.status}`);let i=await r.json();return i.models&&Array.isArray(i.models)?i.models.filter(n=>n.name&&n.supportedGenerationMethods&&n.supportedGenerationMethods.includes("generateContent")&&!n.name.includes("embedding")).map(n=>`gemini@${n.name.replace("models/","")}`).sort():[]}catch(t){return[]}},ue=class extends F{constructor(t,r,i,n,o){super(t,r);this.serviceType=v;this.errorService=t||new P(this.notificationService),this.apiService=i||new R(this.errorService,this.notificationService),this.apiAuthService=n||new E(this.notificationService),this.apiResponseParser=o||new w(this.notificationService)}getDefaultConfig(){return T}getApiKeyFromSettings(t){return this.apiAuthService.getApiKey(t,v)}getSystemMessageRole(){return L}supportsSystemField(){return!1}createPayload(t,r){return{contents:this.convertToGeminiContents(r),generationConfig:{maxOutputTokens:t.max_tokens,temperature:t.temperature,topP:t.top_p}}}convertToGeminiContents(t){let r=[];for(let i of t){let n;i.role===N?n="model":n="user",r.push({role:n,parts:[{text:i.content}]})}return r}handleAPIError(t,r,i){let n={model:r.model,url:r.url,defaultUrl:T.url,aiService:v};return t instanceof Object&&r.url!==T.url?this.errorService.handleUrlError(r.url,T.url,v):this.errorService.handleApiError(t,v,{context:n,showNotification:!0,logToConsole:!0})}async callStreamingAPI(t,r,i,n,o,s,a){try{let{payload:c,headers:p}=this.prepareApiCall(t,r,i,a),m=this.apiResponseParser.insertAssistantHeader(n,o,i.model),y=await this.apiService.makeStreamingRequest(this.getApiUrl(i),c,p,this.serviceType),$=await this.apiResponseParser.processStreamResponse(y,this.serviceType,n,m,s,this.apiService);return this.processStreamingResult($)}catch(c){return{fullString:`Error: ${c}`,mode:"streaming"}}}async callNonStreamingAPI(t,r,i,n){var o;try{i.stream=!1;let{payload:s,headers:a}=this.prepareApiCall(t,r,i,n);return{fullString:await this.apiService.makeNonStreamingRequest(this.getApiUrl(i),s,a,this.serviceType),model:i.model}}catch(s){let a=r.length===1&&((o=r[0].content)==null?void 0:o.toString().includes("Infer title from the summary"));return this.handleApiCallError(s,i,a)}}showNoTitleInferredNotification(){this.notificationService.showWarning("Could not infer title. The file name was not changed.")}async callNonStreamingAPIForTitleInference(t,r,i,n){try{i.stream=!1;let{payload:o,headers:s}=this.prepareApiCall(t,r,i,n,!0);return await this.apiService.makeNonStreamingRequest(this.getApiUrl(i),o,s,this.serviceType)}catch(o){throw o}}prepareApiCall(t,r,i,n,o=!1){this.apiAuthService.validateApiKey(t,this.serviceType);let s=o?r:this.addPluginSystemMessage(r,n),a=i,c=this.createPayload(a,s),p=this.apiAuthService.createAuthHeaders(t,this.serviceType);return p["x-goog-api-key"]=t,{payload:c,headers:p}}getApiUrl(t){let r=t,i=r.model.includes("@")?r.model.split("@")[1]:r.model;return r.stream?`${r.url}/v1beta/models/${i}:streamGenerateContent?alt=sse`:`${r.url}/v1beta/models/${i}:generateContent`}};var de=class{constructor(e,t){this.app=e;this.frontmatterManager=t}async getFrontmatter(e,t){let r={};if(e.file){let c=await this.frontmatterManager.readFrontmatter(e.file);c&&(r={...c})}let i=t.defaultChatFrontmatter?we(t.defaultChatFrontmatter):{},n={...t,...i,...r},o=n.aiService||rt(n.url,n.model)||it(n)||d;return{...{[d]:h,[g]:O,[u]:A,[f]:C,[S]:_,[v]:T}[o]||h,...t,...i,...r,aiService:o}}async updateFrontmatterField(e,t,r){let i=this.app.workspace.getActiveViewOfType(pt.MarkdownView);if(!i||!i.file)return;let n=i.file;try{await this.frontmatterManager.updateFrontmatterField(n,t,r)}catch(o){throw o}}objectToYamlFrontmatter(e){return`---
${Object.entries(e).map(([r,i])=>i==null?`${r}:`:typeof i=="string"?`${r}: "${i}"`:`${r}: ${i}`).join(`
`)}
---

`}generateFrontmatter(e,t={}){if(e.defaultChatFrontmatter){if(Object.keys(t).length>0){let o={...we(e.defaultChatFrontmatter),...t};return this.objectToYamlFrontmatter(o)}return e.defaultChatFrontmatter+`

`}let r=t.aiService||d,i={stream:e.stream,...t};switch(r){case d:i={...i,model:e.openaiDefaultModel,temperature:e.openaiDefaultTemperature,top_p:e.openaiDefaultTopP,max_tokens:e.openaiDefaultMaxTokens,presence_penalty:e.openaiDefaultPresencePenalty,frequency_penalty:e.openaiDefaultFrequencyPenalty};break;case g:i={...i,url:e.ollamaUrl,temperature:e.ollamaDefaultTemperature,top_p:e.ollamaDefaultTopP};break;case u:i={...i,model:e.openrouterDefaultModel,temperature:e.openrouterDefaultTemperature,top_p:e.openrouterDefaultTopP,max_tokens:e.openrouterDefaultMaxTokens,presence_penalty:e.openrouterDefaultPresencePenalty,frequency_penalty:e.openrouterDefaultFrequencyPenalty};break;case f:i={...i,url:e.lmstudioUrl,temperature:e.lmstudioDefaultTemperature,top_p:e.lmstudioDefaultTopP,presence_penalty:e.lmstudioDefaultPresencePenalty,frequency_penalty:e.lmstudioDefaultFrequencyPenalty};break;case S:i={...i,model:e.anthropicDefaultModel,url:e.anthropicUrl,temperature:e.anthropicDefaultTemperature,max_tokens:e.anthropicDefaultMaxTokens};break;case v:i={...i,model:e.geminiDefaultModel,url:e.geminiUrl,temperature:e.geminiDefaultTemperature,top_p:e.geminiDefaultTopP,max_tokens:e.geminiDefaultMaxTokens};break}return this.objectToYamlFrontmatter(i)}};var he=class{constructor(e,t,r,i,n,o){this.app=e;this.fileService=t||new B(e),this.editorContentService=r||new Y(e);let s=new b;if(this.messageService=i||new z(this.fileService,s),!o)throw new Error("FrontmatterService must be provided as it requires FrontmatterManager dependency");this.frontmatterService=o,this.templateService=n||new J(e,this.fileService,this.editorContentService)}async writeInferredTitle(e,t){return this.fileService.writeInferredTitle(e,t)}async ensureFolderExists(e,t){return this.fileService.ensureFolderExists(e,t)}getDate(e,t){return this.fileService.formatDate(e,t)}addHorizontalRule(e,t,r){this.editorContentService.addHorizontalRule(e,t,r)}async clearChat(e){await this.editorContentService.clearChat(e)}moveCursorToEnd(e){this.editorContentService.moveCursorToEnd(e)}async getMessagesFromEditor(e,t){return this.messageService.getMessagesFromEditor(e,t)}async createNewChatFromTemplate(e,t){return this.templateService.createNewChatFromTemplate(e,t)}async createNewChatWithHighlightedText(e,t){return this.templateService.createNewChatWithHighlightedText(e,t)}async getFrontmatter(e,t,r){return await this.frontmatterService.getFrontmatter(e,t)}processResponse(e,t,r){this.messageService.processResponse(e,t,r)}async setModel(e,t){await this.frontmatterService.updateFrontmatterField(e,"model",t)}};var At=()=>`---
system_commands: ['You are a helpful assistant.']
frequency_penalty: ${h.frequency_penalty}
max_tokens: ${h.max_tokens}
model: ${h.model}
presence_penalty: ${h.presence_penalty}
stream: true
temperature: ${h.temperature}
---`,be={apiKey:"",openrouterApiKey:"",anthropicApiKey:"",geminiApiKey:"",openaiUrl:h.url,openrouterUrl:A.url,ollamaUrl:O.url,lmstudioUrl:C.url,anthropicUrl:_.url,geminiUrl:T.url,chatFolder:"ChatGPT_MD/chats",chatTemplateFolder:"ChatGPT_MD/templates",stream:!0,generateAtCursor:!1,autoInferTitle:!1,pluginSystemMessage:Xe,dateFormat:ie,headingLevel:je,inferTitleLanguage:Ye,defaultChatFrontmatter:At(),openaiDefaultModel:h.model,openaiDefaultTemperature:h.temperature,openaiDefaultTopP:h.top_p,openaiDefaultMaxTokens:h.max_tokens,openaiDefaultPresencePenalty:h.presence_penalty,openaiDefaultFrequencyPenalty:h.frequency_penalty,anthropicDefaultModel:_.model,anthropicDefaultTemperature:_.temperature,anthropicDefaultMaxTokens:_.max_tokens,geminiDefaultModel:T.model,geminiDefaultTemperature:T.temperature,geminiDefaultTopP:T.top_p,geminiDefaultMaxTokens:T.max_tokens,openrouterDefaultModel:A.model,openrouterDefaultTemperature:A.temperature,openrouterDefaultTopP:A.top_p,openrouterDefaultMaxTokens:A.max_tokens,openrouterDefaultPresencePenalty:A.presence_penalty,openrouterDefaultFrequencyPenalty:A.frequency_penalty,ollamaDefaultTemperature:.7,ollamaDefaultTopP:1,lmstudioDefaultTemperature:C.temperature,lmstudioDefaultTopP:C.top_p,lmstudioDefaultPresencePenalty:C.presence_penalty,lmstudioDefaultFrequencyPenalty:C.frequency_penalty};var fe=require("obsidian");var ge=class extends fe.PluginSettingTab{constructor(e,t,r){super(e,t),this.settingsProvider=r}display(){let{containerEl:e}=this;e.empty();let t=[{id:"apiKey",name:"OpenAI API Key",description:"API Key for OpenAI",type:"text",placeholder:"your openAI API Key",group:"API Keys"},{id:"openrouterApiKey",name:"OpenRouter.ai API Key",description:"API Key for OpenRouter.ai",type:"text",placeholder:"your openRouter API Key",group:"API Keys"},{id:"anthropicApiKey",name:"Anthropic API Key",description:"API Key for Anthropic (Claude)",type:"text",placeholder:"your Anthropic API Key",group:"API Keys"},{id:"geminiApiKey",name:"Gemini API Key",description:"API Key for Google Gemini (Google AI Studio)",type:"text",placeholder:"your Gemini API Key",group:"API Keys"},{id:"defaultChatFrontmatter",name:"Default Chat Frontmatter",description:"Default frontmatter for new chat files. You can change/use all of the settings exposed by the OpenAI API here: https://platform.openai.com/docs/api-reference/chat/create",type:"textarea",placeholder:this.settingsProvider.settings.defaultChatFrontmatter,group:"Chat Behavior"},{id:"pluginSystemMessage",name:"Plugin System Message",description:"System message that provides context about the Obsidian/ChatGPT MD plugin environment. This helps the AI understand it's working within Obsidian and format responses appropriately.",type:"textarea",group:"Chat Behavior"},{id:"stream",name:"Stream",description:"Stream responses from OpenAI",type:"toggle",group:"Chat Behavior"},{id:"generateAtCursor",name:"Generate at Cursor",description:"Generate text at cursor instead of end of file",type:"toggle",group:"Chat Behavior"},{id:"autoInferTitle",name:"Automatically Infer Title",description:"Automatically infer title after 4 messages have been exchanged",type:"toggle",group:"Chat Behavior"},{id:"inferTitleLanguage",name:"Infer Title Language",description:"Language to use for title inference.",type:"dropdown",options:{English:"English",Japanese:"Japanese",Spanish:"Spanish",French:"French",German:"German",Chinese:"Chinese",Korean:"Korean",Italian:"Italian",Russian:"Russian"},group:"Chat Behavior"},{id:"openaiUrl",name:"OpenAI API URL",description:`URL for OpenAI API
Default URL: ${h.url}`,type:"text",placeholder:h.url,group:"OpenAI Defaults"},{id:"openaiDefaultModel",name:"Default OpenAI Model",description:"Default model for OpenAI chats",type:"text",placeholder:"openai@gpt-4",group:"OpenAI Defaults"},{id:"openaiDefaultTemperature",name:"Default OpenAI Temperature",description:"Default temperature for OpenAI chats (0.0 to 2.0)",type:"text",placeholder:"0.7",group:"OpenAI Defaults"},{id:"openaiDefaultMaxTokens",name:"Default OpenAI Max Tokens",description:"Default max tokens for OpenAI chats",type:"text",placeholder:"400",group:"OpenAI Defaults"},{id:"anthropicUrl",name:"Anthropic API URL",description:`URL for Anthropic API
Default URL: ${_.url}`,type:"text",placeholder:_.url,group:"Anthropic Defaults"},{id:"anthropicDefaultModel",name:"Default Anthropic Model",description:"Default model for Anthropic chats",type:"text",placeholder:"anthropic@claude-3-5-sonnet-20241022",group:"Anthropic Defaults"},{id:"anthropicDefaultTemperature",name:"Default Anthropic Temperature",description:"Default temperature for Anthropic chats (0.0 to 1.0)",type:"text",placeholder:"0.7",group:"Anthropic Defaults"},{id:"anthropicDefaultMaxTokens",name:"Default Anthropic Max Tokens",description:"Default max tokens for Anthropic chats",type:"text",placeholder:"400",group:"Anthropic Defaults"},{id:"geminiUrl",name:"Gemini API URL",description:`URL for Gemini API
Default URL: ${T.url}`,type:"text",placeholder:T.url,group:"Gemini Defaults"},{id:"geminiDefaultModel",name:"Default Gemini Model",description:"Default model for Gemini chats",type:"text",placeholder:"gemini@gemini-1.5-pro",group:"Gemini Defaults"},{id:"geminiDefaultTemperature",name:"Default Gemini Temperature",description:"Default temperature for Gemini chats (0.0 to 2.0)",type:"text",placeholder:"0.7",group:"Gemini Defaults"},{id:"geminiDefaultMaxTokens",name:"Default Gemini Max Tokens",description:"Default max tokens for Gemini chats",type:"text",placeholder:"400",group:"Gemini Defaults"},{id:"openrouterUrl",name:"OpenRouter.ai API URL",description:`URL for OpenRouter.ai API
Default URL: ${A.url}`,type:"text",placeholder:A.url,group:"OpenRouter Defaults"},{id:"openrouterDefaultModel",name:"Default OpenRouter Model",description:"Default model for OpenRouter chats",type:"text",placeholder:"openrouter@anthropic/claude-3.5-sonnet",group:"OpenRouter Defaults"},{id:"openrouterDefaultTemperature",name:"Default OpenRouter Temperature",description:"Default temperature for OpenRouter chats (0.0 to 2.0)",type:"text",placeholder:"0.7",group:"OpenRouter Defaults"},{id:"openrouterDefaultMaxTokens",name:"Default OpenRouter Max Tokens",description:"Default max tokens for OpenRouter chats",type:"text",placeholder:"400",group:"OpenRouter Defaults"},{id:"ollamaUrl",name:"Ollama API URL",description:`URL for Ollama API
Default URL: ${O.url}`,type:"text",placeholder:O.url,group:"Ollama Defaults"},{id:"ollamaDefaultTemperature",name:"Default Ollama Temperature",description:"Default temperature for Ollama chats (0.0 to 2.0)",type:"text",placeholder:"0.7",group:"Ollama Defaults"},{id:"lmstudioUrl",name:"LM Studio API URL",description:`URL for LM Studio API
Default URL: ${C.url}`,type:"text",placeholder:C.url,group:"LM Studio Defaults"},{id:"lmstudioDefaultTemperature",name:"Default LM Studio Temperature",description:"Default temperature for LM Studio chats (0.0 to 2.0)",type:"text",placeholder:"0.7",group:"LM Studio Defaults"},{id:"chatFolder",name:"Chat Folder",description:"Path to folder for chat files",type:"text",group:"Folders"},{id:"chatTemplateFolder",name:"Chat Template Folder",description:"Path to folder for chat file templates",type:"text",placeholder:"chat-templates",group:"Folders"},{id:"dateFormat",name:"Date Format",description:"Date format for chat files. Valid date blocks are: YYYY, MM, DD, hh, mm, ss",type:"text",placeholder:ie,group:"Formatting"},{id:"headingLevel",name:"Heading Level",description:`Heading level for messages (example for heading level 2: '## ${x}${D}'). Valid heading levels are 0, 1, 2, 3, 4, 5, 6`,type:"text",group:"Formatting"}],r={};t.forEach(i=>{r[i.group]||(r[i.group]=[]),r[i.group].push(i)}),Object.entries(r).forEach(([i,n])=>{e.createEl("h3",{text:i}),n.forEach(o=>{this.createSettingElement(e,o)}),e.createEl("hr")})}createSettingElement(e,t){let r=new fe.Setting(e).setName(t.name).setDesc(t.description);t.type==="text"?r.addText(i=>(i.setPlaceholder(t.placeholder||"").setValue(String(this.settingsProvider.settings[t.id])).onChange(async n=>{this.settingsProvider.settings[t.id]=n,await this.settingsProvider.saveSettings()}),i.inputEl.style.width="300px",i)):t.type==="textarea"?r.addTextArea(i=>(i.setPlaceholder(t.placeholder||"").setValue(String(this.settingsProvider.settings[t.id]||t.placeholder)).onChange(async n=>{this.settingsProvider.settings[t.id]=n,await this.settingsProvider.saveSettings()}),i.inputEl.style.width="300px",(t.id==="defaultChatFrontmatter"||t.id==="pluginSystemMessage")&&(i.inputEl.style.height="260px",i.inputEl.style.minHeight="260px"),i)):t.type==="toggle"?r.addToggle(i=>i.setValue(!!this.settingsProvider.settings[t.id]).onChange(async n=>{this.settingsProvider.settings[t.id]=n,await this.settingsProvider.saveSettings()})):t.type==="dropdown"&&t.options&&r.addDropdown(i=>(i.addOptions(t.options||{}),i.setValue(String(this.settingsProvider.settings[t.id])),i.onChange(async n=>{this.settingsProvider.settings[t.id]=n,await this.settingsProvider.saveSettings()}),i.selectEl.style.width="300px",i))}};var Se=class{constructor(e,t=new b,r=new P(new b)){this.plugin=e;this.notificationService=t;this.errorService=r;this.settings=structuredClone(be),this.loadSettings().catch(i=>this.notificationService.showError("Failed to load settings"))}getSettings(){return this.settings}async migrateSettings(){let e=!1;e=await this.migrateUrlSettings()||e,e=await this.migrateFrontmatterSettings()||e,e&&await this.saveSettings()}async migrateUrlSettings(){let e=[{setting:"ollamaUrl",pattern:/\/api\/$/,replacement:"",description:"Removing trailing /api/ from Ollama URL",introducedIn:"2.1.3"},{setting:"openrouterUrl",pattern:/\/api\/$/,replacement:"",description:"Removing trailing /api/ from OpenRouter URL",introducedIn:"2.1.3"},{setting:"openaiUrl",pattern:/\/$/,replacement:"",description:"Removing trailing slash from OpenAI URL",introducedIn:"2.1.3"}],t=!1;for(let r of e){let i=r.setting,n=this.settings[i];n&&r.pattern.test(n)&&(this.updateSettings({[i]:n.replace(r.pattern,r.replacement)}),t=!0)}return t}async migrateFrontmatterSettings(){if(this.settings.hasOwnProperty("openaiDefaultModel")||this.settings.hasOwnProperty("anthropicDefaultModel"))return!1;let t={openaiDefaultModel:h.model,openaiDefaultTemperature:h.temperature,openaiDefaultTopP:h.top_p,openaiDefaultMaxTokens:h.max_tokens,openaiDefaultPresencePenalty:h.presence_penalty,openaiDefaultFrequencyPenalty:h.frequency_penalty,anthropicDefaultModel:_.model,anthropicDefaultTemperature:_.temperature,anthropicDefaultMaxTokens:_.max_tokens,geminiDefaultModel:T.model,geminiDefaultTemperature:T.temperature,geminiDefaultTopP:T.top_p,geminiDefaultMaxTokens:T.max_tokens,openrouterDefaultModel:A.model,openrouterDefaultTemperature:A.temperature,openrouterDefaultTopP:A.top_p,openrouterDefaultMaxTokens:A.max_tokens,openrouterDefaultPresencePenalty:A.presence_penalty,openrouterDefaultFrequencyPenalty:A.frequency_penalty,ollamaDefaultTemperature:.7,ollamaDefaultTopP:1,lmstudioDefaultTemperature:C.temperature,lmstudioDefaultTopP:C.top_p,lmstudioDefaultPresencePenalty:C.presence_penalty,lmstudioDefaultFrequencyPenalty:C.frequency_penalty};return this.updateSettings({...t}),!0}migrateFrontmatterString(e){let t={"model: gpt-4":"model: ${openaiDefaultModel}","model: gpt-4o":"model: ${openaiDefaultModel}","model: claude-3":"model: ${anthropicDefaultModel}","model: gemini-pro":"model: ${geminiDefaultModel}","temperature: 1":"temperature: ${providerDefaultTemperature}","max_tokens: 300":"max_tokens: ${providerDefaultMaxTokens}"},r=e;for(let[i,n]of Object.entries(t))r=r.replace(new RegExp(i,"g"),n);return r!==e&&(r=`# Migrated frontmatter - consider using provider-specific defaults in settings
${r}`),r}async loadSettings(){let e=await this.plugin.loadData();return Object.assign(this.settings,be,e),this.settings}async saveSettings(){await this.plugin.saveData(this.settings)}updateSettings(e){Object.assign(this.settings,e)}async addSettingTab(){await this.loadSettings(),this.plugin.addSettingTab(new ge(this.plugin.app,this.plugin,{settings:this.settings,saveSettings:this.saveSettings.bind(this)}))}};var ve=class{constructor(e,t){this.app=e,this.plugin=t,this.initializeServices()}initializeServices(){this.notificationService=new b,this.errorService=new P(this.notificationService),this.apiService=new R(this.errorService,this.notificationService),this.apiAuthService=new E(this.notificationService),this.apiResponseParser=new w(this.notificationService),this.fileService=new B(this.app),this.frontmatterManager=new j(this.app),this.editorContentService=new Y(this.app),this.messageService=new z(this.fileService,this.notificationService),this.frontmatterService=new de(this.app,this.frontmatterManager),this.templateService=new J(this.app,this.fileService,this.editorContentService),this.editorService=new he(this.app,this.fileService,this.editorContentService,this.messageService,this.templateService,this.frontmatterService),this.settingsService=new Se(this.plugin,this.notificationService,this.errorService)}getAiApiService(e){switch(e){case d:return new ae(this.errorService,this.notificationService,this.apiService,this.apiAuthService,this.apiResponseParser);case g:return new le(this.errorService,this.notificationService,this.apiService,this.apiAuthService,this.apiResponseParser);case u:return new ce(this.errorService,this.notificationService,this.apiService,this.apiAuthService,this.apiResponseParser);case f:return new pe(this.errorService,this.notificationService,this.apiService,this.apiAuthService,this.apiResponseParser);case S:return new me(this.errorService,this.notificationService,this.apiService,this.apiAuthService,this.apiResponseParser);case v:return new ue(this.errorService,this.notificationService,this.apiService,this.apiAuthService,this.apiResponseParser);default:throw new Error(`Unknown AI service type: ${e}`)}}getFileService(){return this.fileService}getEditorContentService(){return this.editorContentService}getMessageService(){return this.messageService}getTemplateService(){return this.templateService}getFrontmatterManager(){return this.frontmatterManager}getFrontmatterService(){return this.frontmatterService}getEditorService(){return this.editorService}getNotificationService(){return this.notificationService}getErrorService(){return this.errorService}getApiService(){return this.apiService}getApiAuthService(){return this.apiAuthService}getApiResponseParser(){return this.apiResponseParser}getSettingsService(){return this.settingsService}};var G=require("obsidian");var Q=require("obsidian"),ee=class extends Q.SuggestModal{constructor(e,t,r,i=[]){super(e),this.modelNames=i,this.editor=t,this.editorService=r,this.limit=this.modelNames.length,this.modelNames.length>0?this.setPlaceholder("Select Large Language Model"):this.setPlaceholder("Loading available models...")}getSuggestions(e){return this.modelNames.filter(t=>t.toLowerCase().includes(e.toLowerCase()))}renderSuggestion(e,t){t.createEl("div",{text:e})}async onChooseSuggestion(e,t){if(!(this.modelNames.indexOf(e)===-1||this.modelNames.length===0)){new Q.Notice(`Selected model: ${e}`);try{await this.editorService.setModel(this.editor,e)}catch(r){new Q.Notice(`Error setting model: ${r.message}`)}}}};var Ae=class{constructor(e,t,r){this.aiService=null;this.availableModels=[];this.plugin=e,this.serviceLocator=t,this.settingsService=r,this.statusBarItemEl=e.addStatusBarItem(),this.apiAuthService=new E}registerCommands(){this.registerChatCommand(),this.registerSelectModelCommand(),this.registerAddDividerCommand(),this.registerAddCommentBlockCommand(),this.registerStopStreamingCommand(),this.registerInferTitleCommand(),this.registerMoveToNewChatCommand(),this.registerChooseChatTemplateCommand(),this.registerClearChatCommand()}registerChatCommand(){this.plugin.addCommand({id:Le,name:"Chat",icon:"message-circle",editorCallback:async(e,t)=>{var o;let r=this.serviceLocator.getEditorService(),i=this.settingsService.getSettings(),n=await r.getFrontmatter(t,i,this.plugin.app);this.aiService=this.serviceLocator.getAiApiService(n.aiService);try{let{messagesWithRole:s,messages:a}=await r.getMessagesFromEditor(e,i);i.generateAtCursor||r.moveCursorToEnd(e),G.Platform.isMobile?new G.Notice(`[ChatGPT MD] Calling ${n.model}`):this.updateStatusBar(`Calling ${n.model}`);let c=this.apiAuthService.getApiKey(i,n.aiService),p=await this.aiService.callAIAPI(s,n,k(i.headingLevel),this.getAiApiUrls(n)[n.aiService],e,i.generateAtCursor,c,i);if(r.processResponse(e,p,i),i.autoInferTitle&&Qe((o=t==null?void 0:t.file)==null?void 0:o.basename,i.dateFormat)&&s.length>ze){let m={...n,openrouterApiKey:this.apiAuthService.getApiKey(i,u),url:this.getAiApiUrls(n)[n.aiService]};if(!m.model){if(n.aiService===d)m.model=h.model;else if(n.aiService===u)m.model=A.model;else if(n.aiService===S)m.model=_.model;else if(n.aiService===v)m.model=T.model;else if(n.aiService===g||n.aiService===f){new G.Notice(`Auto title inference skipped: No model configured for ${n.aiService}. Please set a model in settings.`,6e3);return}}await this.aiService.inferTitle(t,m,a,r)}}catch(s){G.Platform.isMobile&&new G.Notice(`[ChatGPT MD] Calling ${n.model}. `+s,9e3)}this.updateStatusBar("")}})}registerSelectModelCommand(){this.plugin.addCommand({id:"select-model-command",name:"Select Model",icon:"list",editorCallback:async(e,t)=>{let r=this.serviceLocator.getEditorService(),i=this.settingsService.getSettings(),n=new ee(this.plugin.app,e,r,this.availableModels);n.open(),(async()=>{try{let o=await r.getFrontmatter(t,i,this.plugin.app),s=this.apiAuthService.getApiKey(i,d),a=this.apiAuthService.getApiKey(i,u),c={[d]:o.openaiUrl||i.openaiUrl||h.url,[u]:o.openrouterUrl||i.openrouterUrl||A.url,[g]:o.ollamaUrl||i.ollamaUrl||O.url,[f]:o.lmstudioUrl||i.lmstudioUrl||C.url,[S]:o.anthropicUrl||i.anthropicUrl||_.url,[v]:o.geminiUrl||i.geminiUrl||T.url},p=await this.fetchAvailableModels(c,s,a),m=new Set(this.availableModels),y=new Set(p);(this.availableModels.length!==p.length||![...m].every(H=>y.has(H))||![...y].every(H=>m.has(H)))&&p.length>0&&(this.availableModels=p,n.close(),new ee(this.plugin.app,e,r,this.availableModels).open())}catch(o){}})()}})}registerAddDividerCommand(){this.plugin.addCommand({id:xe,name:"Add divider",icon:"minus",editorCallback:async(e,t)=>{let r=this.serviceLocator.getEditorService(),i=this.settingsService.getSettings();r.addHorizontalRule(e,D,i.headingLevel)}})}registerAddCommentBlockCommand(){this.plugin.addCommand({id:Fe,name:"Add comment block",icon:"comment",editorCallback:(e,t)=>{let r=e.getCursor(),i=r.line,n=r.ch,o=`${Be}${M}${qe}`;e.replaceRange(o,r);let s={line:i+1,ch:n};e.setCursor(s)}})}registerStopStreamingCommand(){this.plugin.addCommand({id:ke,name:"Stop streaming",icon:"octagon",callback:()=>{this.aiService&&"stopStreaming"in this.aiService?this.aiService.stopStreaming():this.serviceLocator.getNotificationService().showWarning("No active streaming request to stop")}})}registerInferTitleCommand(){this.plugin.addCommand({id:Ue,name:"Infer title",icon:"subtitles",editorCallback:async(e,t)=>{let r=this.serviceLocator.getEditorService(),i=this.settingsService.getSettings(),n=await r.getFrontmatter(t,i,this.plugin.app);if(this.aiService=this.serviceLocator.getAiApiService(n.aiService),!n.model)return;this.updateStatusBar(`Calling ${n.model}`);let{messages:o}=await r.getMessagesFromEditor(e,i),s={...i,...n,openrouterApiKey:this.apiAuthService.getApiKey(i,u),url:this.getAiApiUrls(n)[n.aiService]};await this.aiService.inferTitle(t,s,o,r),this.updateStatusBar("")}})}registerMoveToNewChatCommand(){this.plugin.addCommand({id:Ge,name:"Create new chat with highlighted text",icon:"highlighter",editorCallback:async(e,t)=>{let r=this.serviceLocator.getEditorService(),i=this.settingsService.getSettings();try{await r.createNewChatWithHighlightedText(e,i)}catch(n){new G.Notice("[ChatGPT MD] Error in Create new chat with highlighted text, check console")}}})}registerChooseChatTemplateCommand(){this.plugin.addCommand({id:$e,name:"Create new chat from template",icon:"layout-template",callback:async()=>{let e=this.serviceLocator.getEditorService(),t=this.settingsService.getSettings();if(t.dateFormat){await e.createNewChatFromTemplate(t,e.getDate(new Date,t.dateFormat));return}new G.Notice("date format cannot be empty in your ChatGPT MD settings. You can choose something like YYYYMMDDhhmmss")}})}registerClearChatCommand(){this.plugin.addCommand({id:He,name:"Clear chat (except frontmatter)",icon:"trash",editorCallback:async(e,t)=>{await this.serviceLocator.getEditorService().clearChat(e)}})}getAiApiUrls(e){return{openai:e.openaiUrl||h.url,openrouter:e.openrouterUrl||A.url,ollama:e.ollamaUrl||O.url,lmstudio:e.lmstudioUrl||C.url,anthropic:e.anthropicUrl||_.url,gemini:e.geminiUrl||T.url}}async initializeAvailableModels(){try{let e=this.settingsService.getSettings(),t=this.apiAuthService.getApiKey(e,d),r=this.apiAuthService.getApiKey(e,u),i={[d]:e.openaiUrl||h.url,[u]:e.openrouterUrl||A.url,[g]:e.ollamaUrl||O.url,[f]:e.lmstudioUrl||C.url,[S]:e.anthropicUrl||_.url,[v]:e.geminiUrl||T.url};this.availableModels=await this.fetchAvailableModels(i,t,r)}catch(e){this.availableModels=[]}}async fetchAvailableModels(e,t,r){function i(n,o,s){return Promise.race([n,new Promise(a=>setTimeout(()=>a(s),o))])}try{let n=[];n.push(i(ot(e[g]),W,[])),n.push(i(at(e[f]),W,[])),I(t)&&n.push(i(nt(e[d],t),W,[])),I(r)&&n.push(i(st(e[u],r),W,[]));let o=this.apiAuthService.getApiKey(this.settingsService.getSettings(),S);I(o)&&n.push(i(lt(e[S],o),W,[]));let s=this.apiAuthService.getApiKey(this.settingsService.getSettings(),v);return I(s)&&n.push(i(ct(e[v],s),W,[])),(await Promise.all(n)).flat()}catch(n){return new G.Notice("Error fetching models: "+(n instanceof Error?n.message:String(n))),[]}}updateStatusBar(e){this.statusBarItemEl.setText(`[ChatGPT MD] ${e}`)}};var ye=class extends mt.Plugin{async onload(){this.serviceLocator=new ve(this.app,this);let e=this.serviceLocator.getSettingsService();await e.loadSettings(),await e.migrateSettings(),await e.addSettingTab(),this.commandRegistry=new Ae(this,this.serviceLocator,e),this.commandRegistry.registerCommands(),this.commandRegistry.initializeAvailableModels().catch(t=>{})}};

/* nosourcemap */